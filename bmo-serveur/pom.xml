<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>akandan.bahou.kassy</groupId>
        <artifactId>bmo</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>bmo-serveur</artifactId>
    <packaging>jar</packaging>

    <name>BMO Serveur</name>
    <description>Serveur backend pour BMO avec Spring Boot</description>

    <dependencies>
        <!-- Dépendance vers le module commun -->
        <dependency>
            <groupId>akandan.bahou.kassy</groupId>
            <artifactId>bmo-commun</artifactId>
        </dependency>

        <!-- Dépendances Spring Boot (versions gérées par le BOM Spring Boot dans le parent) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!-- Exclure Tomcat si vous utilisez Netty ou Undertow pour un serveur purement socket,
                 mais pour un serveur BMO qui pourrait aussi exposer une API REST simple, Tomcat est ok.
                 Pour un serveur purement socket TCP comme décrit, ce starter est peut-être excessif
                 et une approche plus légère sans Spring Web pourrait être envisagée,
                 mais le fichier fourni l'inclut. -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId> <!-- Pour l'interaction avec la base de données via JPA -->
        </dependency>
        <!-- Si vous utilisez Spring Boot pour gérer la configuration des sockets,
             des dépendances comme spring-boot-starter-reactor-netty pourraient être utiles.
             Cependant, le code serveur actuel semble gérer les sockets manuellement. -->

        <!-- Base de données -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId> <!-- Connecteur MySQL -->
            <scope>runtime</scope>
            <version>8.3.0</version> <!-- Spécifiez une version ou gérez via le parent -->
        </dependency>
        <!-- La base de données H2 est listée dans le fichier fourni, typiquement pour les tests ou le développement local facile -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope> <!-- Ou test si seulement pour les tests -->
        </dependency>
        <!-- HikariCP pour le pooling de connexions (souvent inclus par défaut avec Spring Boot Data JPA) -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <!-- Version gérée par Spring Boot BOM -->
        </dependency>


        <!-- Logging (logback est inclus par défaut avec spring-boot-starter) -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- Tests (versions gérées par le parent) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions> <!-- Exclure JUnit 4 si vous utilisez uniquement JUnit 5 -->
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!-- Version gérée par le pluginManagement du parent -->
                <configuration>
                    <mainClass>akandan.bahou.kassy.serveur.ServeurPrincipal</mainClass>
                    <!-- layout>JAR</layout> par défaut, ce qui est bien -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal> <!-- Crée un JAR exécutable Spring Boot -->
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>