<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>akandan.bahou.kassy</groupId>
        <artifactId>bmo</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>bmo-client</artifactId>
    <packaging>jar</packaging>

    <name>BMO Client</name>
    <description>Client JavaFX pour BMO</description>

    <dependencies>
        <!-- Dépendance vers le module commun -->
        <dependency>
            <groupId>akandan.bahou.kassy</groupId>
            <artifactId>bmo-commun</artifactId>
            <!-- La version est gérée par le dependencyManagement du parent -->
        </dependency>

        <!-- Dépendances JavaFX (versions gérées par le parent) -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
        </dependency>
        <dependency> <!-- Peut être nécessaire pour certains éléments graphiques -->
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
        </dependency>
        <dependency> <!-- Base pour JavaFX -->
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
        </dependency>

        <!-- Logging (version gérée par le parent) -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- Tests (version gérée par le parent) -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <!-- Version gérée par le pluginManagement du parent -->
                <configuration>
                    <mainClass>akandan.bahou.kassy.client.AppPrincipale</mainClass>
                    <!-- Options supplémentaires pour le build JavaFX si nécessaire -->
                    <!-- Par exemple, pour créer un jlink image ou un native installer -->
                </configuration>
                <executions>
                    <execution>
                        <!-- Buts par défaut pour compiler et exécuter l'application JavaFX -->
                        <id>default-cli</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin> <!-- Optionnel : Pour créer un "uber-jar" si javafx-maven-plugin ne suffit pas -->
                <!-- Ou si vous ne voulez pas utiliser le système de modules Java pour le déploiement -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>akandan.bahou.kassy.client.AppPrincipaleLauncher</mainClass> <!-- Une classe launcher est souvent nécessaire pour JavaFX dans un uber-jar -->
                                </transformer>
                            </transformers>
                            <filters> <!-- Pour éviter les conflits de signature si des dépendances sont signées -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>